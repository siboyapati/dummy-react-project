[{"/Users/siboyapati/money/mern-boilerplate/client/src/index.js":"1","/Users/siboyapati/money/mern-boilerplate/client/src/App.js":"2","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/index.js":"3","/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/authActions.js":"4","/Users/siboyapati/money/mern-boilerplate/client/src/pages/NotFound/NotFound.js":"5","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Home/Home.js":"6","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Register/Register.js":"7","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Admin/Admin.js":"8","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Login/Login.js":"9","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Profile/Profile.js":"10","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Users/Users.js":"11","/Users/siboyapati/money/mern-boilerplate/client/src/components/Loader/Loader.js":"12","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/registerReducer.js":"13","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/authReducer.js":"14","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/userReducer.js":"15","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/usersReducer.js":"16","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/messageReducer.js":"17","/Users/siboyapati/money/mern-boilerplate/client/src/store/types.js":"18","/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/messageActions.js":"19","/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/registerActions.js":"20","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Register/validation.js":"21","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Login/validation.js":"22","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Profile/validation.js":"23","/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/userActions.js":"24","/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/usersActions.js":"25","/Users/siboyapati/money/mern-boilerplate/client/src/layout/Layout.js":"26","/Users/siboyapati/money/mern-boilerplate/client/src/components/MessageList/MessageList.js":"27","/Users/siboyapati/money/mern-boilerplate/client/src/components/MessageForm/MessageForm.js":"28","/Users/siboyapati/money/mern-boilerplate/client/src/hoc/requireAuth.js":"29","/Users/siboyapati/money/mern-boilerplate/client/src/hoc/requireAdmin.js":"30","/Users/siboyapati/money/mern-boilerplate/client/src/constants/index.js":"31","/Users/siboyapati/money/mern-boilerplate/client/src/components/MessageForm/validation.js":"32","/Users/siboyapati/money/mern-boilerplate/client/src/components/Footer/Footer.js":"33","/Users/siboyapati/money/mern-boilerplate/client/src/components/Navbar/Navbar.js":"34","/Users/siboyapati/money/mern-boilerplate/client/src/components/Message/Message.js":"35","/Users/siboyapati/money/mern-boilerplate/client/src/components/Message/validation.js":"36","/Users/siboyapati/money/mern-boilerplate/client/src/themes/index.js":"37","/Users/siboyapati/money/mern-boilerplate/client/src/themes/default.js":"38","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Home/TT.js":"39","/Users/siboyapati/money/mern-boilerplate/client/src/components/MatNav/Header.jsx":"40","/Users/siboyapati/money/mern-boilerplate/client/src/components/MatNav/SideDrawer.jsx":"41","/Users/siboyapati/money/mern-boilerplate/client/src/components/MatNav/HideOnScroll.jsx":"42","/Users/siboyapati/money/mern-boilerplate/client/src/components/MatNav/BackToTop.jsx":"43","/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/getGen.js":"44","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/genReducer.js":"45"},{"size":818,"mtime":1610699847571,"results":"46","hashOfConfig":"47"},{"size":2348,"mtime":1610738227745,"results":"48","hashOfConfig":"47"},{"size":479,"mtime":1611291683424,"results":"49","hashOfConfig":"47"},{"size":3243,"mtime":1609547131424,"results":"50","hashOfConfig":"47"},{"size":442,"mtime":1610679621074,"results":"51","hashOfConfig":"47"},{"size":8325,"mtime":1611642962952,"results":"52","hashOfConfig":"47"},{"size":3497,"mtime":1609547131423,"results":"53","hashOfConfig":"47"},{"size":564,"mtime":1609547131420,"results":"54","hashOfConfig":"47"},{"size":3178,"mtime":1609547131421,"results":"55","hashOfConfig":"47"},{"size":8224,"mtime":1609547131422,"results":"56","hashOfConfig":"47"},{"size":2909,"mtime":1609547131423,"results":"57","hashOfConfig":"47"},{"size":243,"mtime":1609547131416,"results":"58","hashOfConfig":"47"},{"size":692,"mtime":1609547131426,"results":"59","hashOfConfig":"47"},{"size":1838,"mtime":1609547131425,"results":"60","hashOfConfig":"47"},{"size":1175,"mtime":1609547131426,"results":"61","hashOfConfig":"47"},{"size":660,"mtime":1609547131426,"results":"62","hashOfConfig":"47"},{"size":3332,"mtime":1611292396155,"results":"63","hashOfConfig":"47"},{"size":2618,"mtime":1611293287817,"results":"64","hashOfConfig":"47"},{"size":2664,"mtime":1611293158673,"results":"65","hashOfConfig":"47"},{"size":596,"mtime":1609547131425,"results":"66","hashOfConfig":"47"},{"size":648,"mtime":1609547131423,"results":"67","hashOfConfig":"47"},{"size":303,"mtime":1609547131422,"results":"68","hashOfConfig":"47"},{"size":526,"mtime":1609547131423,"results":"69","hashOfConfig":"47"},{"size":2336,"mtime":1609547131425,"results":"70","hashOfConfig":"47"},{"size":601,"mtime":1609547131425,"results":"71","hashOfConfig":"47"},{"size":482,"mtime":1610861589387,"results":"72","hashOfConfig":"47"},{"size":959,"mtime":1610860642426,"results":"73","hashOfConfig":"47"},{"size":1388,"mtime":1609547131417,"results":"74","hashOfConfig":"47"},{"size":811,"mtime":1609547131419,"results":"75","hashOfConfig":"47"},{"size":749,"mtime":1609547131419,"results":"76","hashOfConfig":"47"},{"size":144,"mtime":1609547131419,"results":"77","hashOfConfig":"47"},{"size":222,"mtime":1609547131418,"results":"78","hashOfConfig":"47"},{"size":519,"mtime":1609547131416,"results":"79","hashOfConfig":"47"},{"size":1610,"mtime":1610739205074,"results":"80","hashOfConfig":"47"},{"size":4018,"mtime":1609547131417,"results":"81","hashOfConfig":"47"},{"size":222,"mtime":1609547131417,"results":"82","hashOfConfig":"47"},{"size":477,"mtime":1610699146911,"results":"83","hashOfConfig":"47"},{"size":2950,"mtime":1610699201057,"results":"84","hashOfConfig":"47"},{"size":5325,"mtime":1611647731793,"results":"85","hashOfConfig":"47"},{"size":3977,"mtime":1610861218416,"results":"86","hashOfConfig":"87"},{"size":1932,"mtime":1610740083688,"results":"88","hashOfConfig":"87"},{"size":311,"mtime":1610740058831,"results":"89","hashOfConfig":"87"},{"size":687,"mtime":1610740004848,"results":"90","hashOfConfig":"87"},{"size":629,"mtime":1611643517154,"results":"91","hashOfConfig":"47"},{"size":758,"mtime":1611293784885,"results":"92","hashOfConfig":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1tmezdl",{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"95"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"95"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"95"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"95"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"95"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"95"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"95"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"95"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"95"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"95"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"95"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"95"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"95"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},"18uosf9",{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"95"},"/Users/siboyapati/money/mern-boilerplate/client/src/index.js",[],["205","206"],"/Users/siboyapati/money/mern-boilerplate/client/src/App.js",["207","208"],"import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport Login from './pages/Login/Login';\nimport Register from './pages/Register/Register';\nimport Home from './pages/Home/Home';\nimport Profile from './pages/Profile/Profile';\nimport Users from './pages/Users/Users';\nimport Admin from './pages/Admin/Admin';\nimport NotFound from './pages/NotFound/NotFound';\nimport Loader from './components/Loader/Loader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { logInUserWithOauth, loadMe } from './store/actions/authActions';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport Themes from './themes';\nimport Layout from './layout/Layout';\n\nconst App = ({ logInUserWithOauth, auth, loadMe }) => {\n  useEffect(() => {\n    loadMe();\n  }, [loadMe]);\n\n  //redosled hookova\n  useEffect(() => {\n    if (window.location.hash === '#_=_') window.location.hash = '';\n\n    const cookieJwt = Cookies.get('x-auth-cookie');\n    if (cookieJwt) {\n      Cookies.remove('x-auth-cookie');\n      logInUserWithOauth(cookieJwt);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!auth.appLoaded && !auth.isLoading && auth.token && !auth.isAuthenticated) {\n      loadMe();\n    }\n  }, [auth.isAuthenticated, auth.token, loadMe, auth.isLoading, auth.appLoaded]);\n\n  return (\n    <>\n      <ThemeProvider theme={Themes.default}>\n        <CssBaseline />\n        <Layout>\n          {auth.appLoaded ? (\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/users\" component={Users} />\n              <Route path=\"/notfound\" component={NotFound} />\n              <Route path=\"/admin\" component={Admin} />\n              <Route exact path=\"/:username\" component={Profile} />\n              <Route exact path=\"/\" component={Home} />\n              <Route component={NotFound} />\n            </Switch>\n          ) : (\n            <Loader />\n          )}\n        </Layout>\n      </ThemeProvider>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default compose(connect(mapStateToProps, { logInUserWithOauth, loadMe }))(App);\n\n","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/index.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/authActions.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/pages/NotFound/NotFound.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/pages/Home/Home.js",["209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"/Users/siboyapati/money/mern-boilerplate/client/src/pages/Register/Register.js",["224"],"import React from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\n\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { useFormik } from 'formik';\n\nimport { registerUserWithEmail } from '../../store/actions/registerActions';\nimport { registerSchema } from './validation';\nimport './styles.css';\n\nconst Register = ({ auth, register: { isLoading, error }, history, registerUserWithEmail }) => {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      username: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: registerSchema,\n    onSubmit: (values) => {\n      registerUserWithEmail(values, history);\n    },\n  });\n\n  if (auth.isAuthenticated) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"register\">\n      <div className=\"container\">\n        <h1>Register page</h1>\n        <p>\n          back to{' '}\n          <Link className=\"bold\" to=\"/\">\n            Home page\n          </Link>\n        </p>\n        <form onSubmit={formik.handleSubmit} noValidate>\n          <h2>Create new account</h2>\n          <div>\n            <input\n              placeholder=\"Name\"\n              name=\"name\"\n              className=\"\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.name}\n            />\n            {formik.touched.name && formik.errors.name ? (\n              <p className=\"error\">{formik.errors.name}</p>\n            ) : null}\n            <input\n              placeholder=\"Username\"\n              name=\"username\"\n              className=\"\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.username}\n            />\n            {formik.touched.username && formik.errors.username ? (\n              <p className=\"error\">{formik.errors.username}</p>\n            ) : null}\n            <input\n              placeholder=\"Email address\"\n              name=\"email\"\n              className=\"\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <p className=\"error\">{formik.errors.email}</p>\n            ) : null}\n            <input\n              placeholder=\"Password\"\n              name=\"password\"\n              className=\"\"\n              type=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <p className=\"error\">{formik.errors.password}</p>\n            ) : null}\n          </div>\n          {error && <p className=\"error\">{error}</p>}\n          <div>\n            <button className=\"btn submit\" type=\"submit\" disabled={isLoading || !formik.isValid}>\n              Sign up now\n            </button>\n          </div>\n          <div>\n            Have an account?{' '}\n            <Link className=\"bold\" to=\"/login\">\n              Log In\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  register: state.register,\n});\n\nexport default compose(withRouter, connect(mapStateToProps, { registerUserWithEmail }))(Register);\n","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Admin/Admin.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/pages/Login/Login.js",["225"],"import React from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { loginUserWithEmail } from '../../store/actions/authActions';\nimport { FACEBOOK_AUTH_LINK, GOOGLE_AUTH_LINK } from '../../constants';\nimport { loginSchema } from './validation';\nimport './styles.css';\n\nconst Login = ({ auth, history, loginUserWithEmail }) => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginSchema,\n    onSubmit: (values) => {\n      loginUserWithEmail(values, history);\n    },\n  });\n\n  if (auth.isAuthenticated) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"login\">\n      <div className=\"container\">\n        <h1>Log in page</h1>\n        <p>\n          back to{' '}\n          <Link className=\"bold\" to=\"/\">\n            Home page\n          </Link>\n        </p>\n        <form onSubmit={formik.handleSubmit}>\n          <h2>Log in with social media</h2>\n          <a className=\"fb btn\" href={FACEBOOK_AUTH_LINK}>\n            <i className=\"fa fa-facebook fa-fw\" /> Login with Facebook\n          </a>\n          <a className=\"google btn\" href={GOOGLE_AUTH_LINK}>\n            <i className=\"fa fa-google fa-fw\" />\n            Login with Google\n          </a>\n          <h2>Login with email address</h2>\n          <p className=\"logins\">Admin: email0@email.com 123456789</p>\n          <p className=\"logins\">User: email1@email.com 123456789</p>\n          <div>\n            <input\n              placeholder=\"Email address\"\n              name=\"email\"\n              className=\"text\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <p className=\"error\">{formik.errors.email}</p>\n            ) : null}\n            <input\n              placeholder=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              className=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <p className=\"error\">{formik.errors.password}</p>\n            ) : null}\n          </div>\n          {auth.error && <p className=\"error\">{auth.error}</p>}\n          <div>\n            <button\n              className=\"btn submit\"\n              disabled={auth.isLoading || !formik.isValid}\n              type=\"submit\"\n            >\n              Log in now\n            </button>\n          </div>\n          <div>\n            Don't have an account?{' '}\n            <Link className=\"bold\" to=\"/register\">\n              Register\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default compose(withRouter, connect(mapStateToProps, { loginUserWithEmail }))(Login);\n","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Profile/Profile.js",["226","227"],"import React, { useEffect, useState, useRef } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { useFormik } from 'formik';\nimport moment from 'moment';\nimport { withRouter } from 'react-router-dom';\n\nimport { getProfile, editUser, deleteUser } from '../../store/actions/userActions';\nimport { loadMe } from '../../store/actions/authActions';\nimport Layout from '../../layout/Layout';\nimport Loader from '../../components/Loader/Loader';\nimport requireAuth from '../../hoc/requireAuth';\nimport { profileSchema } from './validation';\n\nimport './styles.css';\n\n//// nema password za oauth usere ni na klijentu ni serveru\n// validacija na serveru i error handilng na clientu\n// css i html\n//// delete user i logika da ne brise seedovane\n//// admin ruta i hoc\n// error handling login register posto je zajednicki loading i error\n//// mongo atlas i heroku deploy package json i promenljive env i config\n//// avatar staza u bazu samo fajl\n//// gitignore za placeholder avatar\n//// delete profile ruta\n\n// hendlovanje staza za slike, default avatar za izbrisane sa heroku\n// readme\n//// posle edit user treba redirect na novi username url\n\n// fore\n// za facebook more https apsolutni callback url\n// FACEBOOK_CALLBACK_URL=https://mern-boilerplate-demo.herokuapp.com/auth/facebook/callback\n// da bi prihvatio fb domen mora dole da se poklapa sa siteurl\n\nconst Profile = ({\n  getProfile,\n  user: { profile, isLoading, error },\n  auth: { me },\n  editUser,\n  deleteUser,\n  loadMe,\n  history,\n  match,\n}) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [image, setImage] = useState(null);\n  const [avatar, setAvatar] = useState(null);\n  const retryCount = useRef(0);\n  const matchUsername = match.params.username;\n\n  useEffect(() => {\n    getProfile(matchUsername, history);\n  }, [matchUsername]);\n\n  // if changed his own username reload me, done in userActions\n\n  const onChange = (event) => {\n    formik.setFieldValue('image', event.currentTarget.files[0]);\n    setImage(URL.createObjectURL(event.target.files[0]));\n    setAvatar(event.target.files[0]);\n  };\n\n  const handleClickEdit = () => {\n    retryCount.current = 0;\n    setIsEdit((oldIsEdit) => !oldIsEdit);\n    setImage(null);\n    setAvatar(null);\n    formik.setFieldValue('id', profile.id);\n    formik.setFieldValue('name', profile.name);\n    formik.setFieldValue('username', profile.username);\n  };\n\n  const handleDeleteUser = (id, history) => {\n    deleteUser(id, history);\n  };\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      id: '',\n      name: '',\n      username: '',\n      password: '',\n    },\n    validationSchema: profileSchema,\n    onSubmit: (values) => {\n      const formData = new FormData();\n      formData.append('avatar', avatar);\n      formData.append('name', values.name);\n      formData.append('username', values.username);\n      if (profile.provider === 'email') {\n        formData.append('password', values.password);\n      }\n      editUser(values.id, formData, history);\n      //setIsEdit(false);\n    },\n  });\n\n  return (\n    <Layout>\n      <div className=\"profile\">\n        <h1>Profile page</h1>\n        <p>\n          This is the profile page. User can edit his own profile and Admin can edit any user's\n          profile. Only authenticated users can see this page.\n        </p>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div className=\"profile-info\">\n            <img src={image ? image : profile.avatar} className=\"avatar\" />\n            <div className=\"info-container\">\n              <div>\n                <span className=\"label\">Provider: </span>\n                <span className=\"info\">{profile.provider}</span>\n              </div>\n              <div>\n                <span className=\"label\">Role: </span>\n                <span className=\"info\">{profile.role}</span>\n              </div>\n              <div>\n                <span className=\"label\">Name: </span>\n                <span className=\"info\">{profile.name}</span>\n              </div>\n              <div>\n                <span className=\"label\">Username: </span>\n                <span className=\"info\">{profile.username}</span>\n              </div>\n              <div>\n                <span className=\"label\">Email: </span>\n                <span className=\"info\">{profile.email}</span>\n              </div>\n              <div>\n                <span className=\"label\">Joined: </span>\n                <span className=\"info\">\n                  {moment(profile.createdAt).format('dddd, MMMM Do YYYY, H:mm:ss')}\n                </span>\n              </div>\n              <div>\n                <button\n                  className=\"btn\"\n                  type=\"button\"\n                  onClick={handleClickEdit}\n                  disabled={!(me?.username === profile.username || me?.role === 'ADMIN')}\n                >\n                  {isEdit ? 'Cancel' : 'Edit'}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {error && <p className=\"error\">{error}</p>}\n\n        {isEdit && (\n          <div className=\"form\">\n            <form onSubmit={formik.handleSubmit}>\n              <div>\n                <label>Avatar:</label>\n                <input name=\"image\" type=\"file\" onChange={onChange} />\n                {image && (\n                  <button\n                    className=\"btn\"\n                    onClick={() => {\n                      setImage(null);\n                      setAvatar(null);\n                    }}\n                    type=\"button\"\n                  >\n                    Remove Image\n                  </button>\n                )}\n              </div>\n              <input name=\"id\" type=\"hidden\" value={formik.values.id} />\n              <div className=\"input-div\">\n                <label>Name:</label>\n                <input\n                  placeholder=\"Name\"\n                  name=\"name\"\n                  className=\"\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.name}\n                />\n                {formik.touched.name && formik.errors.name ? (\n                  <p className=\"error\">{formik.errors.name}</p>\n                ) : null}\n              </div>\n              <div className=\"input-div\">\n                <label>Username:</label>\n                <input\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  className=\"\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.username}\n                />\n                {formik.touched.username && formik.errors.username ? (\n                  <p className=\"error\">{formik.errors.username}</p>\n                ) : null}\n              </div>\n              {profile.provider === 'email' && (\n                <div className=\"input-div\">\n                  <label>Password:</label>\n                  <input\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"\"\n                    type=\"password\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.password}\n                  />\n                  {formik.touched.password && formik.errors.password ? (\n                    <p className=\"error\">{formik.errors.password}</p>\n                  ) : null}\n                </div>\n              )}\n              <button type=\"submit\" className=\"btn\">\n                Save\n              </button>\n              <button\n                onClick={() => handleDeleteUser(profile.id, history)}\n                type=\"button\"\n                className=\"btn\"\n              >\n                Delete profile\n              </button>\n            </form>\n          </div>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  auth: state.auth,\n});\n\nexport default compose(\n  requireAuth,\n  withRouter,\n  connect(mapStateToProps, { getProfile, editUser, deleteUser, loadMe }),\n)(Profile);\n","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Users/Users.js",["228","229"],"import React, { useEffect } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { getUsers } from '../../store/actions/usersActions';\nimport Layout from '../../layout/Layout';\nimport Loader from '../../components/Loader/Loader';\nimport requireAuth from '../../hoc/requireAuth';\n\nimport './styles.css';\n\nconst Users = ({ getUsers, users: { users, isLoading } }) => {\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"users\">\n        <h1>Users page</h1>\n        <p>\n          This is the Users page. Here are listed all of the users of the app. Click the avatar or\n          the username link to go to user's profile. Only authenticated users can see this page.\n        </p>\n        <div className=\"list\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {users.map((user, index) => {\n                return (\n                  <div key={index} className=\"profile\">\n                    <Link to={`/${user.username}`}>\n                      <img src={user.avatar} className=\"avatar\" />\n                    </Link>\n                    <div className=\"info-container\">\n                      <div>\n                        <span className=\"label\">Provider: </span>\n                        <span className=\"info\">{user.provider}</span>\n                      </div>\n                      <div>\n                        <span className=\"label\">Role: </span>\n                        <span className=\"info\">{user.role}</span>\n                      </div>\n                      <div>\n                        <span className=\"label\">Name: </span>\n                        <span className=\"info\">{user.name}</span>\n                      </div>\n                      <div>\n                        <span className=\"label\">Username: </span>\n                        <Link to={`/${user.username}`} className=\"info bold profile-link\">\n                          {user.username}\n                        </Link>\n                      </div>\n                      <div>\n                        <span className=\"label\">Email: </span>\n                        <span className=\"info\">{user.email}</span>\n                      </div>\n                      <div>\n                        <span className=\"label\">Joined: </span>\n                        <span className=\"info\">\n                          {moment(user.createdAt).format('dddd, MMMM Do YYYY, H:mm:ss')}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.users,\n});\n\nexport default compose(requireAuth, connect(mapStateToProps, { getUsers }))(Users);\n","/Users/siboyapati/money/mern-boilerplate/client/src/components/Loader/Loader.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/registerReducer.js",["230"],"import {\n  REGISTER_WITH_EMAIL_LOADING,\n  REGISTER_WITH_EMAIL_SUCCESS,\n  REGISTER_WITH_EMAIL_FAIL,\n} from '../types';\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n};\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case REGISTER_WITH_EMAIL_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case REGISTER_WITH_EMAIL_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n      };\n    case REGISTER_WITH_EMAIL_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload.error,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/authReducer.js",["231","232"],"import {\n  LOGIN_WITH_OAUTH_LOADING,\n  LOGIN_WITH_OAUTH_SUCCESS,\n  LOGIN_WITH_OAUTH_FAIL,\n  LOGOUT_SUCCESS,\n  LOGIN_WITH_EMAIL_LOADING,\n  LOGIN_WITH_EMAIL_SUCCESS,\n  LOGIN_WITH_EMAIL_FAIL,\n  ME_LOADING,\n  ME_SUCCESS,\n  ME_FAIL,\n} from '../types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: false,\n  me: null,\n  error: null,\n  appLoaded: false,\n};\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case ME_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        appLoaded: false,\n        error: null,\n      };\n    case LOGIN_WITH_EMAIL_LOADING:\n    case LOGIN_WITH_OAUTH_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case LOGIN_WITH_EMAIL_SUCCESS:\n    case LOGIN_WITH_OAUTH_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        token: payload.token,\n        me: payload.me,\n        error: null,\n      };\n    case ME_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        me: payload.me,\n        error: null,\n        appLoaded: true,\n      };\n    case ME_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        isAuthenticated: false,\n        isLoading: false,\n        me: null,\n        error: null,\n        appLoaded: true,\n      };\n    case LOGOUT_SUCCESS:\n    case LOGIN_WITH_EMAIL_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        me: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null, //payload message ovde i razdvoj logout i fail\n      };\n    default:\n      return state;\n  }\n}\n","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/userReducer.js",["233"],"import {\n  GET_PROFILE_LOADING,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_FAIL,\n  EDIT_USER_LOADING,\n  EDIT_USER_SUCCESS,\n  EDIT_USER_FAIL,\n  DELETE_USER_LOADING,\n  DELETE_USER_SUCCESS,\n  DELETE_USER_FAIL,\n} from '../types';\n\nconst initialState = {\n  profile: {},\n  isLoading: false,\n  error: null,\n};\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case GET_PROFILE_LOADING:\n    case EDIT_USER_LOADING:\n    case DELETE_USER_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        profile: payload.profile,\n      };\n    case EDIT_USER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        profile: payload.user,\n      };\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        profile: {},\n      };\n    case GET_PROFILE_FAIL:\n    case EDIT_USER_FAIL:\n    case DELETE_USER_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        profile: {},\n        error: payload.error,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/usersReducer.js",["234"],"import { GET_USERS_LOADING, GET_USERS_SUCCESS, GET_USERS_FAIL } from '../types';\n\nconst initialState = {\n  users: [],\n  isLoading: false,\n  error: null,\n};\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case GET_USERS_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case GET_USERS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        users: payload.users,\n      };\n    case GET_USERS_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        users: [],\n        error: payload,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/messageReducer.js",["235"],"import {\n  GET_MESSAGES_LOADING,\n  GET_MESSAGES_SUCCESS,\n  GET_MESSAGES_FAIL,\n  GET_GEN_LOADING,\n  GET_GEN_SUCCESS,\n  GET_GEN_FAIL,\n  ADD_MESSAGE_LOADING,\n  ADD_MESSAGE_SUCCESS,\n  ADD_MESSAGE_FAIL,\n  DELETE_MESSAGE_LOADING,\n  DELETE_MESSAGE_SUCCESS,\n  DELETE_MESSAGE_FAIL,\n  EDIT_MESSAGE_LOADING,\n  EDIT_MESSAGE_SUCCESS,\n  EDIT_MESSAGE_FAIL,\n  CLEAR_MESSAGE_ERROR,\n} from '../types';\n\nconst initialState = {\n  messages: [],\n  isLoading: false,\n  error: null,\n};\n\n// You could have an array [{ id: 1, isLoading: false, error: null, text: \"Hey\" }, { id: 2, isLoading: true, error: null, text: null }]\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case GET_MESSAGES_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_GEN_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case ADD_MESSAGE_LOADING:\n      return {\n        ...state,\n        messages: [\n          {\n            id: 0,\n            text: 'Loading...',\n            isLoading: true,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            user: { ...payload.me },\n          },\n          ...state.messages,\n        ],\n      };\n    case DELETE_MESSAGE_LOADING:\n    case EDIT_MESSAGE_LOADING:\n      return {\n        ...state,\n        messages: state.messages.map((m) => {\n          if (m.id === payload.id) return { ...m, isLoading: true };\n          return m;\n        }),\n      };\n    case GET_MESSAGES_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        messages: payload.messages,\n      };\n    case GET_GEN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        messages: payload.messages,\n      };\n    case ADD_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        messages: state.messages.map((m) => {\n          if (m.id === 0) return payload.message;\n          return m;\n        }),\n      };\n    case DELETE_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        messages: state.messages.filter((m) => m.id !== payload.message.id),\n      };\n    case EDIT_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        messages: state.messages.map((m) => {\n          if (m.id === payload.message.id) return payload.message;\n          return m;\n        }),\n      };\n    case DELETE_MESSAGE_FAIL:\n    case EDIT_MESSAGE_FAIL:\n      return {\n        ...state,\n        error: null,\n        messages: state.messages.map((m) => {\n          if (m.id === payload.id) return { ...m, isLoading: false, error: payload.error };\n          return m;\n        }),\n      };\n    case GET_MESSAGES_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload.error,\n      };\n    case GET_GEN_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload.error,\n      };\n    case ADD_MESSAGE_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload.error,\n        messages: state.messages.filter((m) => m.id !== 0),\n      };\n    case CLEAR_MESSAGE_ERROR:\n      return {\n        ...state,\n        messages: state.messages.map((m) => {\n          if (m.id === payload.id) return { ...m, isLoading: false, error: null };\n          return m;\n        }),\n      };\n    default:\n      return state;\n  }\n}\n","/Users/siboyapati/money/mern-boilerplate/client/src/store/types.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/messageActions.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/registerActions.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/pages/Register/validation.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/pages/Login/validation.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/pages/Profile/validation.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/userActions.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/usersActions.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/layout/Layout.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/components/MessageList/MessageList.js",["236","237"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Message from '../Message/Message';\nimport Loader from '../Loader/Loader';\n\nimport { getMessages } from '../../store/actions/messageActions';\nimport './styles.css';\n\nconst MessageList = ({ getMessages, message: { messages, isLoading, error } }) => {\n  useEffect(() => {\n    getMessages();\n  }, []);\n\n  return (\n    <div className=\"message-list\">\n      <h2>Messages:</h2>\n      {error && <div className=\"error-center\">{error}</div>}\n      <div className=\"list\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            {/* {messages.map((message, index) => {\n              return <Message key={index} message={message} />;\n            })} */}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  message: state.message || [],\n});\n\nexport default connect(mapStateToProps, { getMessages })(MessageList);","/Users/siboyapati/money/mern-boilerplate/client/src/components/MessageForm/MessageForm.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/hoc/requireAuth.js",["238"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default (ChildComponent) => {\n  class ComposedComponent extends Component {\n    // Our component just got rendered\n    componentDidMount() {\n      this.shouldNavigateAway();\n    }\n\n    // Our component just got updated\n    componentDidUpdate() {\n      this.shouldNavigateAway();\n    }\n\n    //token ima auth nema, prepisi ga sa func component i useefect\n    shouldNavigateAway() {\n      if (!this.props.auth.isAuthenticated) {\n        console.log('history push');\n        this.props.history.push('/');\n      }\n    }\n\n    render() {\n      return <ChildComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { auth: state.auth };\n  }\n\n  return connect(mapStateToProps)(ComposedComponent);\n};\n","/Users/siboyapati/money/mern-boilerplate/client/src/hoc/requireAdmin.js",["239"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default (ChildComponent) => {\n  class ComposedComponent extends Component {\n    // Our component just got rendered\n    componentDidMount() {\n      this.shouldNavigateAway();\n    }\n\n    // Our component just got updated\n    componentDidUpdate() {\n      this.shouldNavigateAway();\n    }\n\n    shouldNavigateAway() {\n      if (!(this.props.auth.isAuthenticated && this.props.auth.me?.role === 'ADMIN')) {\n        this.props.history.push('/');\n      }\n    }\n\n    render() {\n      return <ChildComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { auth: state.auth };\n  }\n\n  return connect(mapStateToProps)(ComposedComponent);\n};\n","/Users/siboyapati/money/mern-boilerplate/client/src/constants/index.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/components/MessageForm/validation.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/components/Footer/Footer.js",["240"],"import React from 'react';\n\nimport './styles.css';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer-content\">\n        <span className=\"username\">@nemanjam 2020</span>\n        <iframe\n          src=\"https://ghbtns.com/github-btn.html?user=nemanjam&repo=mern-boilerplate&type=star&count=true&size=large\"\n          frameBorder=\"0\"\n          scrolling=\"0\"\n          width=\"160px\"\n          height=\"30px\"\n        ></iframe>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","/Users/siboyapati/money/mern-boilerplate/client/src/components/Navbar/Navbar.js",["241","242"],"import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { logOutUser } from '../../store/actions/authActions';\nimport './styles.css';\n\nconst Navbar = ({ auth, logOutUser, history }) => {\n  const onLogOut = (event) => {\n    event.preventDefault();\n    logOutUser(history);\n  };\n  return (\n    <nav className=\"navbar\">\n      <h2 className=\"logo\">App</h2>\n      <ul className=\"nav-links flex-1\">\n        <li className=\"nav-item\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        {auth.isAuthenticated ? (\n          <>\n            <li className=\"nav-item\">\n              <Link to=\"/users\">Users</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={`/${auth.me.username}`}>Profile</Link>\n            </li>\n            {auth.me?.role === 'ADMIN' && (\n              <li className=\"nav-item\">\n                <Link to=\"/admin\">Admin</Link>\n              </li>\n            )}\n            <li className=\"flex-1\" />\n            <img className=\"avatar\" src={auth.me.avatar} />\n            <li className=\"nav-item\" onClick={onLogOut}>\n              <a href=\"#\">Log out</a>\n            </li>\n          </>\n        ) : (\n          <>\n            <li className=\"flex-1\" />\n            <li className=\"nav-item\">\n              <Link to=\"/login\">Login</Link>\n            </li>\n          </>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default compose(withRouter, connect(mapStateToProps, { logOutUser }))(Navbar);\n","/Users/siboyapati/money/mern-boilerplate/client/src/components/Message/Message.js",["243","244"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { useFormik } from 'formik';\n\nimport { deleteMessage, editMessage, clearMessageError } from '../../store/actions/messageActions';\nimport { messageFormSchema } from './validation';\n\nimport './styles.css';\n\nconst Message = ({ message, auth, deleteMessage, editMessage, clearMessageError }) => {\n  const [isEdit, setIsEdit] = useState(false);\n\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    if (!isEdit) {\n      deleteMessage(id);\n    }\n  };\n\n  const handleClickEdit = (e) => {\n    e.preventDefault();\n    formik.setFieldValue('text', message.text);\n    setIsEdit((oldIsEdit) => !oldIsEdit);\n  };\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      text: '',\n      id: message.id,\n    },\n    validationSchema: messageFormSchema,\n    onSubmit: (values, { resetForm }) => {\n      editMessage(values.id, { text: values.text });\n      setIsEdit(false);\n      // resetForm();\n    },\n  });\n\n  // dont reset form if there is an error\n  useEffect(() => {\n    if (!message.error && !message.isLoading) formik.resetForm();\n  }, [message.error, message.isLoading]);\n\n  // keep edit open if there is an error\n  useEffect(() => {\n    if (message.error) setIsEdit(true);\n  }, [message.error]);\n\n  return (\n    <div className={message.isLoading ? 'message loader' : 'message'}>\n      <div className=\"message-header\">\n        <Link to={`/${message.user.username}`}>\n          <img src={message.user.avatar} className=\"avatar\" />\n        </Link>\n        <div>\n          <Link to={`/${message.user.username}`} className=\"name\">\n            {message.user.name}\n          </Link>\n          <span className=\"username\">@{message.user.username}</span>\n          <span className=\"time text-light\">{moment(message.createdAt).fromNow()}</span>\n          {!moment(message.createdAt).isSame(message.updatedAt, 'minute') && (\n            <span className=\"time text-light\">{`Edited: ${moment(\n              message.updatedAt,\n            ).fromNow()}`}</span>\n          )}\n        </div>\n      </div>\n      <form onSubmit={formik.handleSubmit}>\n        {isEdit ? (\n          <>\n            <textarea\n              name=\"text\"\n              rows=\"3\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.text}\n              disabled={message.isLoading}\n            />\n            <input type=\"hidden\" name=\"id\" />\n            {(formik.touched.text && formik.errors.text) || message.error ? (\n              <p className=\"error\">{formik.errors.text || message.error}</p>\n            ) : null}\n          </>\n        ) : (\n          <p>{message.text}</p>\n        )}\n        {auth.isAuthenticated && (auth.me.id === message.user.id || auth.me.role === 'ADMIN') && (\n          <>\n            {!isEdit ? (\n              <>\n                <button onClick={handleClickEdit} type=\"button\" className=\"btn\">\n                  Edit\n                </button>\n                <button onClick={(e) => handleDelete(e, message.id)} type=\"button\" className=\"btn\">\n                  Delete\n                </button>\n              </>\n            ) : (\n              <>\n                <button type=\"submit\" className=\"btn\" disabled={message.isLoading}>\n                  Submit\n                </button>\n                <button\n                  onClick={() => {\n                    setIsEdit((oldIsEdit) => !oldIsEdit);\n                    clearMessageError(message.id);\n                  }}\n                  type=\"button\"\n                  className=\"btn\"\n                >\n                  Cancel\n                </button>\n              </>\n            )}\n          </>\n        )}\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteMessage, editMessage, clearMessageError })(Message);\n","/Users/siboyapati/money/mern-boilerplate/client/src/components/Message/validation.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/themes/index.js",["245"],"import defaultTheme from \"./default\";\n\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst overrides = {\n  typography: {\n    h1: {\n      fontSize: \"3rem\",\n    },\n    h2: {\n      fontSize: \"2rem\",\n    },\n    h3: {\n      fontSize: \"1.64rem\",\n    },\n    h4: {\n      fontSize: \"1.5rem\",\n    },\n    h5: {\n      fontSize: \"1.285rem\",\n    },\n    h6: {\n      fontSize: \"1.142rem\",\n    },\n  },\n};\n\nexport default {\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\n};","/Users/siboyapati/money/mern-boilerplate/client/src/themes/default.js",["246"],"import tinycolor from \"tinycolor2\";\n\nconst primary = \"#536DFE\";\nconst secondary = \"#FF5C93\";\nconst warning = \"#FFC260\";\nconst success = \"#3CD4A0\";\nconst info = \"#9013FE\";\n\nconst lightenRate = 7.5;\nconst darkenRate = 15;\n\nexport default {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(secondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(warning)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(success)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(info)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    text: {\n      primary: \"#4A4A4A\",\n      secondary: \"#6E6E6E\",\n      hint: \"#B9B9B9\",\n    },\n    background: {\n      default: \"#F6F7FF\",\n      light: \"#F3F5FF\",\n    },\n  },\n  customShadows: {\n    widget:\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetDark:\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetWide:\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"#4A4A4A1A\",\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: \"#B9B9B9\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#F3F5FF !important\",\n          \"&:focus\": {\n            backgroundColor: \"#F3F5FF\",\n          },\n        },\n      },\n      button: {\n        \"&:hover, &:focus\": {\n          backgroundColor: \"#F3F5FF\",\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: \"white\",\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 56,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\n        paddingLeft: 24\n      },\n      head: {\n        fontSize: \"0.95rem\",\n      },\n      body: {\n        fontSize: \"0.95rem\",\n      },\n    },\n    PrivateSwitchBase: {\n      root: {\n        marginLeft: 10\n      }\n    }\n  },\n};","/Users/siboyapati/money/mern-boilerplate/client/src/pages/Home/TT.js",["247","248","249","250","251","252","253"],"/Users/siboyapati/money/mern-boilerplate/client/src/components/MatNav/Header.jsx",["254","255","256","257","258","259","260"],"import {\n  AppBar,\n  Container,\n  Hidden,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Toolbar,\n  Fab,\n  Grid,\n} from '@material-ui/core';\nimport { Home, KeyboardArrowUp } from '@material-ui/icons';\nimport * as React from 'react';\nimport HideOnScroll from './HideOnScroll';\nimport SideDrawer from './SideDrawer';\nimport BackToTop from './BackToTop';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { logOutUser } from '../../store/actions/authActions';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  navbarDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`,\n  },\n  navListDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`,\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `white`,\n  },\n});\n\nconst navLinks = [\n  { title: `about us`, path: `/about-us` },\n  { title: `product`, path: `/product` },\n  { title: `blog`, path: `/blog` },\n  { title: `contact`, path: `/contact` },\n  { title: `faq`, path: `/faq` },\n];\n\nconst Header = ({ auth, logOutUser, history }) => {\n  const classes = useStyles();\n\n  const onLogOut = (event) => {\n    event.preventDefault();\n    logOutUser(history);\n  };\n\n  const handleChange = (event) => {\n    // setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    // setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    // setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <HideOnScroll>\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <IconButton edge=\"start\" aria-label=\"home\">\n              <a href=\"/\" style={{ color: `white` }}>\n                <Home fontSize=\"large\" />\n              </a>\n            </IconButton>\n\n            <Hidden smDown>\n              <List\n                component=\"nav\"\n                aria-labelledby=\"main navigation\"\n                className={classes.navListDisplayFlex}\n              >\n                {navLinks.map(({ title, path }) => (\n                  <a href={path} key={title} className={classes.linkText}>\n                    <ListItem div>\n                      <ListItemText primary={title} />\n                    </ListItem>\n                  </a>\n                ))}\n              </List>\n            </Hidden>\n            <Hidden mdUp>\n              <SideDrawer navLinks={navLinks} />\n            </Hidden>\n\n            <Grid container justify=\"flex-end\">\n              {auth.isAuthenticated ? (\n                <>\n                  <li className=\"nav-item\">\n                    <Link to=\"/users\">Users</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to={`/${auth.me.username}`}>Profile</Link>\n                  </li>\n                  {auth.me?.role === 'ADMIN' && (\n                    <li className=\"nav-item\">\n                      <Link to=\"/admin\">Admin</Link>\n                    </li>\n                  )}\n                  <li className=\"flex-1\" />\n                  <img className=\"avatar\" src={auth.me.avatar} />\n                  <li className=\"nav-item\" onClick={onLogOut}>\n                    <a href=\"#\">Log out</a>\n                  </li>\n                </>\n              ) : (\n                <>\n                  <li className=\"flex-1\" />\n                  <li className=\"nav-item\">\n                    <Link to=\"/login\">Login</Link>\n                  </li>\n                </>\n              )}\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      {/* <Toolbar id=\"back-to-top-anchor\" /> */}\n\n      <BackToTop>\n        <Fab color=\"secondary\" size=\"large\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUp />\n        </Fab>\n      </BackToTop>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default compose(withRouter, connect(mapStateToProps, { logOutUser }))(Header);\n",["261","262"],"/Users/siboyapati/money/mern-boilerplate/client/src/components/MatNav/SideDrawer.jsx",[],"/Users/siboyapati/money/mern-boilerplate/client/src/components/MatNav/HideOnScroll.jsx",[],"/Users/siboyapati/money/mern-boilerplate/client/src/components/MatNav/BackToTop.jsx",[],"/Users/siboyapati/money/mern-boilerplate/client/src/store/actions/getGen.js",[],"/Users/siboyapati/money/mern-boilerplate/client/src/store/reducers/genReducer.js",["263"],"import {\n  GET_GEN_LOADING,\n  GET_GEN_SUCCESS,\n  GET_GEN_FAIL,\n} from '../types';\n\nconst initialState = {\n  data: [],\n  isLoading: false,\n  error: null,\n};\n// You could have an array [{ id: 1, isLoading: false, error: null, text: \"Hey\" }, { id: 2, isLoading: true, error: null, text: null }]\n\nexport default function (state = initialState, { type, payload }) {\n  switch (type) {\n    case GET_GEN_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_GEN_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: payload.messages,\n      };\n    case GET_GEN_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        error: payload.error,\n      };\n    default:\n      return state;\n  }\n}\n",{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":14,"column":10,"nodeType":"270","messageId":"271","endLine":14,"endColumn":20},{"ruleId":"272","severity":1,"message":"273","line":36,"column":6,"nodeType":"274","endLine":36,"endColumn":8,"suggestions":"275"},{"ruleId":"268","severity":1,"message":"276","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"277","line":6,"column":8,"nodeType":"270","messageId":"271","endLine":6,"endColumn":14},{"ruleId":"268","severity":1,"message":"278","line":11,"column":8,"nodeType":"270","messageId":"271","endLine":11,"endColumn":21},{"ruleId":"268","severity":1,"message":"269","line":17,"column":10,"nodeType":"270","messageId":"271","endLine":17,"endColumn":20},{"ruleId":"268","severity":1,"message":"279","line":18,"column":8,"nodeType":"270","messageId":"271","endLine":18,"endColumn":14},{"ruleId":"268","severity":1,"message":"280","line":22,"column":10,"nodeType":"270","messageId":"271","endLine":22,"endColumn":18},{"ruleId":"268","severity":1,"message":"281","line":23,"column":10,"nodeType":"270","messageId":"271","endLine":23,"endColumn":24},{"ruleId":"268","severity":1,"message":"282","line":23,"column":26,"nodeType":"270","messageId":"271","endLine":23,"endColumn":39},{"ruleId":"268","severity":1,"message":"283","line":30,"column":8,"nodeType":"270","messageId":"271","endLine":30,"endColumn":14},{"ruleId":"268","severity":1,"message":"284","line":31,"column":8,"nodeType":"270","messageId":"271","endLine":31,"endColumn":13},{"ruleId":"268","severity":1,"message":"285","line":137,"column":7,"nodeType":"270","messageId":"271","endLine":137,"endColumn":14},{"ruleId":"268","severity":1,"message":"286","line":236,"column":7,"nodeType":"270","messageId":"271","endLine":236,"endColumn":16},{"ruleId":"268","severity":1,"message":"287","line":240,"column":10,"nodeType":"270","messageId":"271","endLine":240,"endColumn":28},{"ruleId":"268","severity":1,"message":"288","line":241,"column":11,"nodeType":"270","messageId":"271","endLine":241,"endColumn":15},{"ruleId":"268","severity":1,"message":"285","line":246,"column":7,"nodeType":"270","messageId":"271","endLine":246,"endColumn":14},{"ruleId":"268","severity":1,"message":"289","line":6,"column":8,"nodeType":"270","messageId":"271","endLine":6,"endColumn":9},{"ruleId":"268","severity":1,"message":"289","line":8,"column":8,"nodeType":"270","messageId":"271","endLine":8,"endColumn":9},{"ruleId":"272","severity":1,"message":"290","line":55,"column":6,"nodeType":"274","endLine":55,"endColumn":21,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":113,"column":13,"nodeType":"294","endLine":113,"endColumn":76},{"ruleId":"272","severity":1,"message":"295","line":17,"column":6,"nodeType":"274","endLine":17,"endColumn":8,"suggestions":"296"},{"ruleId":"292","severity":1,"message":"293","line":36,"column":23,"nodeType":"294","endLine":36,"endColumn":67},{"ruleId":"297","severity":1,"message":"298","line":12,"column":1,"nodeType":"299","endLine":35,"endColumn":2},{"ruleId":"268","severity":1,"message":"300","line":4,"column":3,"nodeType":"270","messageId":"271","endLine":4,"endColumn":24},{"ruleId":"297","severity":1,"message":"298","line":23,"column":1,"nodeType":"299","endLine":83,"endColumn":2},{"ruleId":"297","severity":1,"message":"298","line":19,"column":1,"nodeType":"299","endLine":59,"endColumn":2},{"ruleId":"297","severity":1,"message":"298","line":9,"column":1,"nodeType":"299","endLine":33,"endColumn":2},{"ruleId":"297","severity":1,"message":"298","line":28,"column":1,"nodeType":"299","endLine":137,"endColumn":2},{"ruleId":"268","severity":1,"message":"301","line":4,"column":8,"nodeType":"270","messageId":"271","endLine":4,"endColumn":15},{"ruleId":"272","severity":1,"message":"302","line":13,"column":6,"nodeType":"274","endLine":13,"endColumn":8,"suggestions":"303"},{"ruleId":"297","severity":1,"message":"304","line":4,"column":1,"nodeType":"299","endLine":34,"endColumn":3},{"ruleId":"297","severity":1,"message":"304","line":4,"column":1,"nodeType":"299","endLine":32,"endColumn":3},{"ruleId":"305","severity":1,"message":"306","line":10,"column":9,"nodeType":"294","endLine":16,"endColumn":10},{"ruleId":"292","severity":1,"message":"293","line":35,"column":13,"nodeType":"294","endLine":35,"endColumn":60},{"ruleId":"307","severity":1,"message":"308","line":37,"column":15,"nodeType":"294","endLine":37,"endColumn":27},{"ruleId":"272","severity":1,"message":"309","line":45,"column":6,"nodeType":"274","endLine":45,"endColumn":40,"suggestions":"310"},{"ruleId":"292","severity":1,"message":"293","line":56,"column":11,"nodeType":"294","endLine":56,"endColumn":63},{"ruleId":"297","severity":1,"message":"311","line":28,"column":1,"nodeType":"299","endLine":30,"endColumn":3},{"ruleId":"297","severity":1,"message":"311","line":12,"column":1,"nodeType":"299","endLine":138,"endColumn":3},{"ruleId":"268","severity":1,"message":"312","line":7,"column":26,"nodeType":"270","messageId":"271","endLine":7,"endColumn":42},{"ruleId":"268","severity":1,"message":"313","line":16,"column":5,"nodeType":"270","messageId":"271","endLine":16,"endColumn":16},{"ruleId":"272","severity":1,"message":"314","line":63,"column":6,"nodeType":"274","endLine":63,"endColumn":8,"suggestions":"315"},{"ruleId":"268","severity":1,"message":"316","line":65,"column":9,"nodeType":"270","messageId":"271","endLine":65,"endColumn":16},{"ruleId":"268","severity":1,"message":"317","line":66,"column":7,"nodeType":"270","messageId":"271","endLine":66,"endColumn":12},{"ruleId":"268","severity":1,"message":"318","line":70,"column":7,"nodeType":"270","messageId":"271","endLine":70,"endColumn":8},{"ruleId":"268","severity":1,"message":"319","line":72,"column":5,"nodeType":"270","messageId":"271","endLine":72,"endColumn":9},{"ruleId":"268","severity":1,"message":"320","line":3,"column":3,"nodeType":"270","messageId":"271","endLine":3,"endColumn":12},{"ruleId":"268","severity":1,"message":"279","line":24,"column":8,"nodeType":"270","messageId":"271","endLine":24,"endColumn":14},{"ruleId":"268","severity":1,"message":"321","line":58,"column":9,"nodeType":"270","messageId":"271","endLine":58,"endColumn":21},{"ruleId":"268","severity":1,"message":"322","line":62,"column":9,"nodeType":"270","messageId":"271","endLine":62,"endColumn":19},{"ruleId":"268","severity":1,"message":"323","line":66,"column":9,"nodeType":"270","messageId":"271","endLine":66,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":115,"column":19,"nodeType":"294","endLine":115,"endColumn":66},{"ruleId":"307","severity":1,"message":"308","line":117,"column":21,"nodeType":"294","endLine":117,"endColumn":33},{"ruleId":"264","replacedBy":"324"},{"ruleId":"266","replacedBy":"325"},{"ruleId":"297","severity":1,"message":"298","line":14,"column":1,"nodeType":"299","endLine":36,"endColumn":2},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logInUserWithOauth'. Either include it or remove the dependency array. If 'logInUserWithOauth' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["328"],"'useEffect' is defined but never used.","'Layout' is defined but never used.","'ReactDataGrid' is defined but never used.","'Button' is defined but never used.","'useTheme' is defined but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.","'columns' is assigned a value but never used.","'gridStyle' is assigned a value but never used.","'BasicFilteringGrid' is defined but never used.","'data' is assigned a value but never used.","'_' is defined but never used.","React Hook useEffect has missing dependencies: 'getProfile' and 'history'. Either include them or remove the dependency array. If 'getProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["329"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["330"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'LOGIN_WITH_OAUTH_FAIL' is defined but never used.","'Message' is defined but never used.","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array. If 'getMessages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["331"],"Assign arrow function to a variable before exporting as module default","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["332"],"Assign object to a variable before exporting as module default","'MuiThemeProvider' is defined but never used.","'getMuiTheme' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getGen'. Either include it or remove the dependency array. If 'getGen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["333"],"'classes' is assigned a value but never used.","'theme' is assigned a value but never used.","'k' is assigned a value but never used.","'cols' is assigned a value but never used.","'Container' is defined but never used.","'handleChange' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["326"],["327"],"no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},"Update the dependencies array to be: [logInUserWithOauth]",{"range":"346","text":"347"},"Update the dependencies array to be: [getProfile, history, matchUsername]",{"range":"348","text":"349"},"Update the dependencies array to be: [getUsers]",{"range":"350","text":"351"},"Update the dependencies array to be: [getMessages]",{"range":"352","text":"353"},"Update the dependencies array to be: [formik, message.error, message.isLoading]",{"range":"354","text":"355"},"Update the dependencies array to be: [getGen]",{"range":"356","text":"357"},[1233,1235],"[logInUserWithOauth]",[1823,1838],"[getProfile, history, matchUsername]",[519,521],"[getUsers]",[382,384],"[getMessages]",[1235,1269],"[formik, message.error, message.isLoading]",[1668,1670],"[getGen]"]